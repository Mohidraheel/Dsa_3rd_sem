#include<iostream>
using namespace std;

bool issafe(int **arr,int row,int col,int n)
{
  if(row <n && col <n && row >=0 && col >=0 && arr[row][col]==-1)
  {
    return true;
  }
  return false;
}

bool knighttour(int **arr,int x,int y,int movecount,int n)
{
  if(n*n==movecount)
  {
    return true;
  }


    int movex[] = {2, 1, -1, -2, -2, -1, 1, 2}; 
    int movey[] = {1, 2, 2, 1, -1, -2, -2, -1};
  for(int k=0;k<8;k++)
  {
    int nextx=movex[k]+x;
    int nexty=movey[k]+y;

    if(issafe(arr,nextx,nexty,n))
    {
      arr[nextx][nexty]=movecount;
      if(knighttour(arr,nextx,nexty,movecount+1,n))
      {
        return true;
      }
                          
      arr[nextx][nexty]=-1;
    }
  }
      return false;
 
}
int main()
{
  cout<<"Enter the size of board:";
  int n;
  cin>>n;
  int **arr=new int*[n];
  for(int i=0;i<n;i++)
  {
    arr[i]=new int[n];
    for(int j=0;j<n;j++)
    {
      arr[i][j]=-1;
    }
  }
  arr[0][0]=0;

  if(knighttour(arr,0,0,1,n))
  {
    for(int i=0;i<n;i++)
    {
      for(int j=0;j<n;j++)
      {
        cout<<arr[i][j]<<" ";
      }
      cout<<endl;
    }
  }
  else
  {
    cout<<"No solution"<<endl;
  }
return 0;
}



































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































